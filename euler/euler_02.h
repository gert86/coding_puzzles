#pragma once

#define CLASSNAME Euler_02

#include "base_header.h"

using namespace std;
using namespace Helper;

// -------------------- Program starts here -------------------------
//
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

class CLASSNAME
{
public:
    CLASSNAME()
    {
        cout << "Running " << VERSION_STRING(CLASSNAME) << "..." << endl;
    }

    int sumOfEvenFibonacciNumbers(int num)
    {
      int numEvenFibonacci = 0;
      int sumEvenFibonacci = 0;

      // start
      int numLower = 0;
      int numHigher = 1;
      int numFib = numLower + numHigher;

      // iterate
      while (numFib < num) {

        if (numFib % 2 == 0) {
          numEvenFibonacci++;
          sumEvenFibonacci += numFib;
          std::cout << "Fib: " << numFib << " --> EVEN" << std::endl;
        }
        else {
          std::cout << "Fib: " << numFib << std::endl;
        }

        numLower = numHigher;
        numHigher = numFib;
        numFib = numLower + numHigher;

      }

      return sumEvenFibonacci;
    }
};

TEST(CLASSNAME, Test1)
{    
    CLASSNAME instance;

    auto sum = instance.sumOfEvenFibonacciNumbers(4000000);
    std::cout << "Found " << sum << " to be the SUM of fib numbers below 4M" << std::endl;
    ASSERT_EQ(sum, 4613732);
}

#undef CLASSNAME
